#!/bin/sh

# d.rast Command with Legend

# $Id: d.rast.leg2,v 1.6 2002/03/26 13:33:57 markus Exp $
# Revised Feb. 2000, M. Neteler, grass5
# Revised April 23, 1991, RL Glenn, grass4.0
# Revised February 13, 1990
# July 20, 1989
# Version 1 - Written by Lane Price, CGIS

# This command allows the user to display a rast file and its
# legend in a properly sized box.

if test "$GISBASE" = ""; then
 echo "You must be in GRASS GIS to run this program." >&2
 exit 1
fi   
     
eval `g.gisenv`
: ${GISBASE?} ${GISDBASE?} ${LOCATION_NAME?} ${MAPSET?}
LOCATION=$GISDBASE/$LOCATION_NAME/$MAPSET

if [ $# != 1  -o "$1" = "-help" -o "$1" = "help" ]
	then
          tput clear
	  echo "Usage: d.rastwl rast_file

NAME 
     d.rastwl - Tool for creating a map and legend on the screen

DESCRIPTION
     d.rastwl creates three windows on the screen, and displays a 
     legend, the rast file, and a title for the rast file named
     on the command line.  The legend window is sized according
     to the text labels in the cats file.  The map window is 
     oriented either horizonally or vertically (depending upon the 
     shape of the legend window) for the largest display possible.

     If there are too many categories for legible text in the 
     on-screen legend, then a message is displayed and the map
     is then displayed without a graphics legend.

SEE ALSO
     d.rastoc"

	  exit
fi

if test -f $LOCATION/SEARCH_PATH
then
 for i in `cat $LOCATION/SEARCH_PATH`
	do
	  if test -f $GISDBASE/$LOCATION_NAME/$i/cats/$1
	    then file=$GISDBASE/$LOCATION_NAME/$i/cats/$1
		 break
	  fi
	done
else
 for i in `ls $GISDBASE/$LOCATION_NAME/$MAPSET/..`
	do
	  if test -f $GISDBASE/$LOCATION_NAME/$i/cats/$1
	    then file=$GISDBASE/$LOCATION_NAME/$i/cats/$1
		 break
	  fi
	done
fi

if test "$file" = ""
	then
	  echo "Did not find the file $1";exit
fi

hlegend=`awk 'NR==1 {if ($1 == "#") {
			printf "%.0f" ,($2 + 3) * 2.5}
			else {
			printf "%.0f" ,($1 + 3) * 2.5}
		    }' < $file`

if test $hlegend -gt 100
	then 
	echo "Too many categories for graphics legend display";
        d.frame -e > /dev/null
        echo "Displaying map without graphics legend"
        d.rast $1
  	exit 1
fi

mapname=`awk 'NR==2 {print $0}' < $file`

wlegend=`awk 'NR>4 {if (length($0) > maxlen) {
		maxlen = length($0)}
	        }
	      END {print (maxlen + 2) * 1.2 + 8}' < $file`

# Formula for legend window width is # chars * a % of screen 
# required for each char * an add-on factor for boxes...

# Round off width Number
echo $wlegend > $HOME/temp6
wlegend=`awk -F. '{print $1}' < $HOME/temp6`
rm $HOME/temp6

# Round off height number
echo $hlegend > $HOME/temp6
hlegend=`awk -F. '{print $1}' < $HOME/temp6`
rm $HOME/temp6

# Create Windows
d.frame -e > /dev/null
d.frame legend at=`expr 100 - $hlegend`,100,`expr 100 - $wlegend`,100 > /dev/null
d.frame legend
d.legend $1

# Create map window and map
if test "$hlegend" -gt "$wlegend"
	then
	  tborder=90
	  rborder=`expr 99 - $wlegend`
	else
	  tborder=`expr 99 - $hlegend`
	  rborder=100
fi

d.frame map at=0,$tborder,0,$rborder > /dev/null
d.frame map
d.rast $1

# Create Title window and map
d.frame title at=91,100,0,`expr 99 - $wlegend` > /dev/null
d.frame title
d.font romant
d.text << EOF
.C red
.S 38
`echo $mapname`
EOF
d.font romans
d.text << EOF
.C yellow
.S 28


`echo Map Name: $1`
EOF
d.frame map

# Restore original frame:
d.frame -s full_screen
