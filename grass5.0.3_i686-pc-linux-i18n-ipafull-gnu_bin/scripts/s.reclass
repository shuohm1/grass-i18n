#!/bin/sh

# reclasses an input sites file based upon a rulesfile

if test "$GISBASE" = ""; then
 echo "You must be in GRASS GIS to run this program." >&2
 exit 1
fi   
     
eval `g.gisenv`
: ${GISBASE?} ${GISDBASE?} ${LOCATION_NAME?} ${MAPSET?}
LOCATION=$GISDBASE/$LOCATION_NAME/$MAPSET

if [ $# = 0 -o "$1" = "-help" -o "$1" = "help" ]
then
	echo "Usage:"
	echo "s.reclass input=name output=name rules=name"
	echo ""
	echo "Parameters:"
	echo "    input     name of existing raster file to be preferentially displayed" 
	echo "   output     name of reclass sites file to be created"
	echo "    rules     name of unixfile containing reclass rules"
	echo 
	exit
fi
#
# parse out the input (from gdbase/parser)
#

for i
do
        case $i in
                i=*|in=*|inp=*|inpu=*|input=*)
				INPUT=`echo $i | awk -F '=' '{print $2}'` ;;

                o=*|ou=*|out=*|outp=*|outpu=*|output=*) 
				OUTPUT=`echo $i| awk -F '=' '{print $2}'` ;;

                r=*|ru=*|rul=*|rule=*|rules=*) 
				RULES=`echo $i | awk -F '=' '{print $2}'` ;;
        esac
done

eval `g.findfile element=site_lists file=$INPUT`
        if [ ! "$file" ]
        then
		echo
                echo "Unable to find the input raster file: $INPUT"
		echo
                exit 1
        else
                INPUT=$file
        fi

if [ ! "$OUTPUT" ] 
then
	echo
	echo "Unable to find new reclass file name"
	echo
	exit 1
fi

if [ ! "$RULES" ]
then
        echo
        echo "Unable to find rules file for query"
        echo
        exit 1
fi

SITESDIR=`ls $LOCATION | grep site_lists`
 
if [ ! "$SITESDIR" ]
then
	mkdir $LOCATION/site_lists
fi

#
# prep the sites file for gawk query, and load reclass rules for testing
#
newtotal=`wc $RULES | gawk '{print $1}'`
export newtotal
export RULES
echo $newtotal $RULES
gawk 'BEGIN { 
	rules = ENVIRON["RULES"]
	for (i=1; i<=ENVIRON["newtotal"]; i++) { 
	getline < rules
	sub("="," ")
	newatt[$1] = $2	
	for (j=3; j<=NF; j++) {
		newcat[$1] = newcat[$1] " " $j
		}
	}
}		
	{
	gsub("\\|", " ")
	sub("#", " ")
	if (newcat[$3]) {printf("%s|%s|#%d %s\n", $1, $2, newatt[$3], newcat[$3]) }} ' $INPUT > $LOCATION/site_lists/$OUTPUT
