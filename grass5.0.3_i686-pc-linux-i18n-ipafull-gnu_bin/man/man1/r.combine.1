r.combine(1)                  Grass User's Manual                 r.combine(1)



NNAAMMEE
       rr..ccoommbbiinnee   -  Allows category values from several raster map layers to
       be combined.
       _(_G_R_A_S_S _R_a_s_t_e_r _P_r_o_g_r_a_m_)

SSYYNNOOPPSSIISS
       rr..ccoommbbiinnee
       rr..ccoommbbiinnee < _i_n_p_u_t_f_i_l_e

DDEESSCCRRIIPPTTIIOONN
       _r_._c_o_m_b_i_n_e accepts commands that are similar to those used  for  boolean
       combinations (AND, OR, NOT) in order to overlay user-selected groups of
       categories from different raster map layers.  After the _r_._c_o_m_b_i_n_e  pro-
       gram is started, the users are asked if they want the graphic output to
       go to a color graphics monitor.  If a color  graphics  monitor  is  not
       used,  the  graphic  output  is displayed on the terminal screen.  This
       display is, of course, quite rough. It consists of numerals  represent-
       ing  the  various  categories  that result from the _r_._c_o_m_b_i_n_e analysis.
       Following this question, the user will see a [1]:.  This is  the  first
       prompt, and indicates that _r_._c_o_m_b_i_n_e is ready to receive input from the
       user.


       The following commands perform operations in _r_._c_o_m_b_i_n_e_:
        Command  |                      |
        [Alias]  |      Followed by     |              Such as
       __________|______________________|________________________
       NAME      |  name for raster     |  sandstone
       [name]    |  map output          |
       __________|______________________|________________________
       GROUP     |  category values     |  1-40 (elevation.255)
       [group]   |  and a raster map    |
       [grp]     |                      |
       __________|______________________|________________________
       AND       |  expression describ- |  (grp 4 (soils))
       [and]     |  ing a raster map    |  (grp 2 (owner))
       [&][&&amp;]   |  and categories      |
       __________|______________________|________________________
       OR        |  expression describ- |  (grp 4 (soils))
       [or]      |  ing a raster map    |  (grp 2 (owner))
       [| ][| | ]|  and categories      |
       __________|______________________|________________________
       NOT       |  expression describ- |  (grp 2 3 (roads))
       [not]     |  ing a raster map    |
       [~]       |  and categories      |
       __________|______________________|________________________
       OVER      |  existing raster map |  sandstone yellow
       [over]    |  and color           |
       [overlay] |                      |
       __________|______________________|________________________
       COVER     |  existing raster map |  sandstone
       [cover]   |                      |
       __________|______________________|________________________

       _r_._c_o_m_b_i_n_e uses the same colors for all the operating commands.  This is
       the _r_._c_o_m_b_i_n_e color table:
       0 black    4 blue     8 grey           12 blue/grey
       1 red      5 purple   9 red/grey       13 purple/grey
       2 yellow   6 green    10 yellow/grey   14 green/grey
       3 orange   7 white    11 orange/grey   15 dark grey

       The  user may enter commands either line-by-line from within _r_._c_o_m_b_i_n_e,
       or by typing the commands into a file which is then read into r.combine
       using the UNIX redirection symbol <. The command format is the same for
       the two methods. The line-by-line method, however, does  not  allow  as
       much  flexibility  as does use of an input file. If a line containing a
       syntax error is entered on the _r_._c_o_m_b_i_n_e command line, it  is  cleared;
       the line must then be re-entered in its entirety.  Input files contain-
       ing mistakes, however, can easily be modified (rather than  recreated).
       An  input file is especially advantageous when a more complex series of
       statements is input to _r_._c_o_m_b_i_n_e.


       _r_._c_o_m_b_i_n_e uses two types of commands: those which  perform  operations,
       and those which have some other function.


       _r_._c_o_m_b_i_n_e  can  probably  best be learned by following examples, so pay
       special attention to those included below with  the  operating  command
       descriptions. Notice two things in particular:

              All  parentheses  must  be closed.  A raster map layer name must
              often be enclosed within parentheses; each time one of the above
              commands is used, it and its appropriate companions must also be
              enclosed within parentheses.

              Certain spaces are important. Generally, _r_._c_o_m_b_i_n_e  requires  at
              least one space before an opening parenthesis (except when it is
              the first character in an expression).  _r_._c_o_m_b_i_n_e ignores  extra
              spaces and tab characters.


   OOPPEERRAATTIINNGG CCOOMMMMAANNDDSS
       Below  is a summary of the syntax of the operating commands, a descrip-
       tion of each command, and examples  using  the  Spearfish  sample  data
       base.

       NAME
              (NAME  new_map_name  (Expression))  Allows  graphic output to be
              saved in the raster map layer _n_e_w___m_a_p___n_a_m_e, so that it is avail-
              able  for additional analysis or for future viewing. The results
              of performing the expression in parentheses is then placed  into
              the  named  output  raster map layer (here, _n_e_w___m_a_p___n_a_m_e).  Note
              that this means that _r_._c_o_m_b_i_n_e may be used to create new  raster
              map  layers from existing ones.  _r_._c_o_m_b_i_n_e automatically creates
              a color table for the new raster map layers; however,  the  user
              should  run  the  GRASS  program  _r_._s_u_p_p_o_r_t  to fill in category
              assignments and history information if the new raster map  layer
              is to be saved for future use in the mapset.


       example:
       ((NNAAMMEE ssaannddssttoonnee ((GGRROOUUPP 44 ((ggeeoollooggyy))))))
       The above command will result in the creation of a new raster map layer
       named _s_a_n_d_s_t_o_n_e, noting the locations of cells  with  _g_e_o_l_o_g_y  category
       value  4.   You  must  then run the GRASS program _r_._s_u_p_p_o_r_t in order to
       label the categories present in the new raster map layer.


       Resultant categories:
       0  - black: other than sandstone
       1  - red:   sandstone




       GROUP
              (GROUP category_values (existing raster map layer)) Selects  out
              categories  of  the  desired values from the existing raster map
              layer which is indicated in parentheses directly after the cate-
              gory  grouping.  It  also  works to select out just one category
              from the map layer.  Any of the  following  are  legal  category
              groupings:
              2
              1-18
              1 2 5-7.



       example:
        ((GGRROOUUPP 11--4400 ((eelleevvaattiioonn..225555))))
       Depicts  only the area with elevation 1187 meters or less (i.e., _e_l_e_v_a_-
       _t_i_o_n map layer category values 1 through 40 only).
       Resultant categories:
       0  - black: elevation > 1187 m
       1  - red  : elevation <= 1187 m



       example:
        ((NNAAMMEE llooww..hhii ((GGRROOUUPP 11--4400 223388--225555 ((eelleevvaattiioonn..225555))))))
       Depicts only those areas with elevations of either 1187 meters or less,
       or  in  excess of 1787 meters (_e_l_e_v_a_t_i_o_n categories 1-40, and 238-255).
       The graphic output is saved in the new raster map layer called  _l_o_w_._h_i.
       Resultant categories:
       0  - black : elevation > 1187 m and < 1787 m
       1  - red   : elevation <= 1187 m and >= 1787 m




       AND
              (AND  (Expression A) (Expression B)) Combines two map layers and
              creates a new one; when BOTH of the category  values  associated
              with the same given cell location in the two combined map layers
              are non-zero, a category value of 1 is assigned to that cell  in
              the new map layer. If, however, eeiitthheerr map layer assigns a cate-
              gory value of zero to the same given cell location, the category
              value  associated with this cell's location in the resultant map
              layer also becomes zero.


       For example,
       raster map  1   2 2 0
                       2 1 0
                       0 0 0         1 0 0  results
                              AND 1 1 0
       raster map  2   1 0 1         0 0 0
                       1 1 0
                       1 1 0



       example:
        ((AANNDD ((GGRROOUUPP 44 77--99 ((ggeeoollooggyy)))) ((GGRROOUUPP 22 ((oowwnneerr))))))
       Depicts the occurrences of categories 4, 7, 8, and 9 from the map layer
       _g_e_o_l_o_g_y  whenever  they occur on U.S.  Forest Service property. Results
       are displayed to the terminal screen.
       Resultant categories:
       0  - black : no data occurred any of the
                    raster map layers
       1  - red   : the AND condition is met



       Note that if neither map layer contained any areas of  "no  data",  the
       resultant raster map layer would include only 1's.


       Example:
        ((NNAAMMEE ssaanndd ((AANNDD ((GGRROOUUPP 44 77--99 ((ggeeoollooggyy)))) ((GGRROOUUPP 22 ((oowwnneerr))))))))
       Same as above, except the results are saved in the map layer _s_a_n_d.



       OR
              (OR  (Expression  A) (Expression B)) Combines two map layers and
              creates a new one; when EITHER of the category values associated
              with the same given cell location in the two combined map layers
              is non-zero, a category value of 1 is assigned to that  cell  in
              the  new map layer.  If, however, bbootthh map layers assign a cate-
              gory value of zero to the same given cell location, the category
              value of this cell in the resultant map layer also becomes zero.
              Only two map layers may be combined at one time. For example:
              raster map  1   2 2 0
                              2 1 0
                              0 0 0          1 1 1  results
                                   OR     1 1 0
              raster map  2   1 0 1          1 1 0
                              1 1 0
                              1 1 0




       Example:
        ((OORR ((GGRROOUUPP 44 77--99 ((ggeeoollooggyy)))) ((GGRROOUUPP 22 ((oowwnneerr))))))
       Depicts all occurrences of categories 4, 7, 8, and 9 from the map layer
       _g_e_o_l_o_g_y  as  well  as showing all the land which is U.S. Forest Service
       property. Results are displayed to the terminal screen.
       Resultant categories:
       0  - black: this area has neither the values of 4,
                   7, 8, or 9 nor is it on U.S. Forest Service
                   property
       1  - red  : this area meets one or the other of the
                   conditions noted above



       Note that no distinction is made between those places where  conditions
       are  met in both map layers and where they are met in only one. See the
       _r_._c_o_m_b_i_n_e command OVER if it is necessary to make that distinction.



       NOT
              (NOT (Expression)) Negates _E_x_p_r_e_s_s_i_o_n in order to define  a  new
              map  layer  which  contains  the  opposite of what is defined by
              _E_x_p_r_e_s_s_i_o_n. The new raster map layer will contain category  val-
              ues  of either 0 or 1. 0 values would indicate that the NOT con-
              ditions were not met.  Cell values of 1 would indicate that  the
              NOT  conditions  were met.  In order to specify the map layer in
              which to save the output from NOT,  use  the  _r_._c_o_m_b_i_n_e  command
              NAME.


       Example:
        ((NNAAMMEE rrddss ((NNOOTT ((GGRROOUUPP 00 ((rrooaaddss))))))))
       Areas containing category zero in the existing map layer _r_o_a_d_s indicate
       those locations  within  the  data  base  where  roads  do  not  exist.
       Negating  that expression leaves us with all other areas  - i.e., those
       locations at which roads do exist. Here, the graphic output is saved in
       the raster map layer named _r_d_s.
       Resultant categories:
       0  - black: no roads
       1  - red  : roads



       The same results could have been obtained with:
        ((NNAAMMEE  rrddss  ((GGRROOUUPP  11--55  ((rrooaaddss)))))).  NOT is most useful in those cases
       where it is simpler to define something on the basis of what it is  not
       than on the basis of what it is.



       OVER
              (OVER  color  (Expression))  or  (OVER  existing_rastermap color
              (Expression)) Performs a  _t_r_a_n_s_p_a_r_e_n_t  overlay  operation.  This
              means  that  when a map layer which depicts some feature in blue
              is overlain with one which depicts  a  feature  in  yellow,  the
              resulting  raster map layer will show areas of overlap in green;
              areas in the two raster map layer  that  do  not  overlap  other
              areas maintain their original colors (i.e., yellow or blue).


       OVER  may  be  run  with or without an existing map layer name.  If the
       user does not specify an existing raster map layer name,  OVER  applies
       the  color  specified to the expression in parentheses and displays the
       results. If an existing  raster  map  layer  name  is  specified,  OVER
       applies  the color to the expression (just as before) and then overlays
       the results on top of the existing raster map layer.  In order to  make
       sense  of  the  colors which result, use only those existing map layers
       created using OVER.


       OVER allows the user to specify just four colors:
        color value
        red     1
        yellow  2
        blue    4
        grey    8

       These four colors are then combined to form other colors.   The  number
       of progressive overlays allowed is limited to four (one for each of the
       basic colors above). The actual  number  of  colors  on  the  resultant
       raster  map layer, however, varies depending on the distribution of the
       features and on the interaction of the features from the different  map
       layers  which  are overlain. When two or more of these colors are over-
       lain, new colors are created. The numerical values associated with  the
       colors above are significant, in that the values of any additional col-
       ors created reflect the sum of two or more of the  four  above.   These
       overlain  color  values  appear on the resultant overlay as _c_e_l_l (cate-
       gory) values. The user should know what these values represent in order
       to  know what category information is to be associated with the new map
       layer (entered using the GRASS _r_._s_u_p_p_o_r_t command), and to know the sig-
       nificance  of this and subsequent analyses involving the new map layer.


       Any of these colors and category values may result from OVER. Note that
       this is the same as the _r_._c_o_m_b_i_n_e color table listed above.
       0 black   4 blue    8 grey          12 blue/grey
       1 red     5 purple  9 red/grey      13 purple/grey
       2 yellow  6 green   10 yellow/grey  14 green/grey
       3 orange  7 white   11 orange/grey  15 dark grey

       The syntax for OVER makes no provision for a new raster map layer name.
       It is necessary to use the _r_._c_o_m_b_i_n_e operator NAME  to  specify  a  new
       raster  map layer name in which to save the graphic output generated by
       OVER. If the user runs OVER without specifying  an  output  raster  map
       layer  name, output is displayed to the terminal.  However, this output
       is available for future use only if it is saved using the NAME command.


       example:
        ((NNAAMMEE ppaarrkk..oorr..pprriivv ((OOVVEERR rreedd ((GGRROOUUPP 11 ((oowwnneerr))))))))
       The new raster map layer _p_a_r_k_._o_r_._p_r_i_v displays private land (i.e., cat-
       egory 1 of the raster map layer _o_w_n_e_r) in red, and displays U.S. Forest
       Service  land  (i.e.,  "no  data"  areas within the _o_w_n_e_r map layer) as
       black.
       Resultant categories:
       0  - black: park
       1  - red  : private land



       example:
        ((NNAAMMEE rrooaaddss..oorr..nnoott ((OOVVEERR ppaarrkk..oorr..pprriivv yyeellllooww ((GGRROOUUPP 00 ((rrooaaddss))))))))
       Category 0 in the map layer _r_o_a_d_s is overlain in yellow on top  of  the
       _p_a_r_k_._o_r_._p_r_i_v map layer created above. The output is placed in a new map
       layer named _r_o_a_d_s_._o_r_._n_o_t.
       Resultant categories in _r_o_a_d_s_._o_r_._n_o_t are:
       0  - black  : park; road
       1  - red    : private; road
       2  - yellow : park; no road
       3  - orange : private; no road



       example:
        ((NNAAMMEE llooww..eelleevv ((OOVVEERR ppaarrkk..oorr..pprriivv bblluuee ((GGRROOUUPP 11--1199 ((eelleevvaattiioonn..225555))))))))
       The elevation categories of 1123 meters or less from the map layer _e_l_e_-
       _v_a_t_i_o_n_._2_5_5   are   assigned   the  color  blue  and  then  overlain  on
       _p_a_r_k_._o_r_._p_r_i_v (generated in the previous example).
       Resultant categories in the new map layer _l_o_w_._e_l_e_v are:
       0  - black  : park; > 1123 m
       1  - red    : private; > 1123m
       4  - blue   : park; <= 1123 m
       5  - purple : private; <= 1123m

       Note how category 5 is the sum of red (1) + blue (4) (i.e., the  inter-
       section  of  areas  containing  low  elevations  and private lands with
       roads).



       COVER
              (COVER existing_map (Expression))  Performs  an  _o_p_a_q_u_e  overlay
              operation.  This  means  that  where  the top map layer contains
              "holes" (cell category values of 0), the bottom map  layer  will
              show  through. Where the top map layer contains information on a
              feature, it will cover (substitute its category value for) what-
              ever  is below it. The top map layer is that which is defined by
              _E_x_p_r_e_s_s_i_o_n. The bottom map layer is _e_x_i_s_t_i_n_g___m_a_p; this map layer
              must already exist.


       The  user  does  not specify colors with COVER.  COVER uses the default
       color table that is listed above with OVER.  Colors are assigned start-
       ing  with  the  lower  map layer.  The category values are assigned the
       color from the table that corresponds with that value.  For example,  1
       would be red; 2, yellow; 3, orange, etc.  Moving to the upper map layer
       COVER starts wherever it left off after the lower one. If  the  highest
       value  of  the  lower  map layer was 5, then all non-zero (i.e., places
       where a feature exists) cells of the upper map layer would be  assigned
       the value of 6 (green). Note that if, in this case, the upper map layer
       did not have any cells of value zero, then the entire resulting new map
       layer  would be green. The upper map layer would have been assigned the
       value 6 and would have completely covered that which was below it.


       This is what happens:
       Expression           1 1 1 0
        (top raster map)    1 1 0 0
                            0 0 0 0      6 6 6 0   result
                                      6 6 2 0
       oldmap               2 5 0 0      5 5 2 2
        (bottom raster map) 0 5 2 0
                            5 5 2 2

       As many map layers may be overlain as is desired.  However, there is  a
       practical  limit  on  the  number  of map layers that can be used while
       still generating sensible output.  That number depends on the  features
       involved  in each map layer, and how many cells within the upper (over-
       lying) map layers contain category values of zero (holes through  which
       underlying data can be seen).


       COVER  has  no  provision  for saving graphic output. Use the _r_._c_o_m_b_i_n_e
       command NAME to save output in a raster map layer.


       Example:
       ((NNAAMMEE lo.elev (COVER owner (GROUP 1-19 (elevation.255))))
       The categories that indicate elevation  of  1123  meters  or  less  are
       placed  on  top  of  the  existing  map layer _o_w_n_e_r. Output is saved in
       _l_o_._e_l_e_v.
       Resultant categories:
       1  - red    : private ownership; elev > 1123 m
       2  - yellow : park property; elev > 1123 m
       3  - orange : park or private; elev <= 1123 m



       Example:
       ((NNAAMMEE sand.lo (COVER lo.elev (GROUP 4 (geology))))
       Category 4 of _g_e_o_l_o_g_y (sandstone) is placed  on  top  of  _l_o_._e_l_e_v,  the
       raster  map layer created in the previous example.  The output is saved
       in _s_a_n_d_._l_o.
       Resultant categories:
       1  - red    : private ownership; elev > 1123 m;
                     no sandstone
       2  - yellow : park property; elev > 1123 m ;
                     no sandstone
       3  - orange : park or private; elev <= 1123 m;
                     no sandstone
       4  - blue   : park or private; any elev; sandstone



   AADDDDIITTIIOONNAALL CCOOMMMMAANNDDSS
       _r_._c_o_m_b_i_n_e also contains a number of commands which  are  not  used  for
       operations,  but  serve  a variety of other functions.  Additional com-
       mands:
       Command|        Alias       |                Followed By
       _______|____________________|______________________________
       QUIT   |  quit  q  exit  bye|
       CATS   |  categories  cats  |  existing raster map
       EXP    |  exp  expr         |  number of an expression
       !      |                    |  shell command e.g. vi comb.1
       <      |                    |  existing input file
       WINDOW |  window            |  existing raster map layer
       HISTORY|  history  hist     |
       HELP   |  help              |  combine command
       ERASE  |  erase             |


       QUIT   Allows the user to exit from _r_._c_o_m_b_i_n_e  while  remaining  within
              the GRASS session.



       CATS
              CATS  raster map Gives user an on-line listing of categories and
              labels for the map layer specified. For example: [1]:CCAATTSS oowwnneerr



       EXP
              EXP expression number During an  _r_._c_o_m_b_i_n_e  session,  each  com-
              pleted expression and command is assigned a number.  This number
              may be used to reference the expression to which it is assigned;
              this  means  that  the  user  can  substitute  the _n_u_m_b_e_r of the
              expression for the expression itself.


       For example:
       [4]:((GGRROOUUPP 55 ((ggeeoollooggyy))))
       [5]:((NNAAMMEE lliimmeessttoonnee ((EEXXPP 44))))
       Use the UNIX history mechanism (explained below) to determine the  spe-
       cific  numbers  associated  with particular expressions in your current
       _r_._c_o_m_b_i_n_e session.

       !

              !shell command Allows user to temporarily suspend _r_._c_o_m_b_i_n_e  and
              go run another command, as in the two examples below:
              !vi input
              !g.list type=rast



       Unless  otherwise specified by the user, when a file is created using a
       system editor (like _v_i) from within _r_._c_o_m_b_i_n_e_, this file will be placed
       in the user's mapset under the COMBINE directory.  After the command is
       completed, control returns to _r_._c_o_m_b_i_n_e.



       <
              < input filename Takes input from the  specified  _f_i_l_e_n_a_m_e  con-
              taining _r_._c_o_m_b_i_n_e commands. The user, of course, must previously
              have entered the commands into this  named  input  file.  If  no
              pathname is given, the input file is assumed to be in the user's
              mapset under the COMBINE directory.  For example, the user would
              perform  the  following  steps  to  redirect input from the file
              _c_o_m_b_._i_n into the _r_._c_o_m_b_i_n_e program (while within _r_._c_o_m_b_i_n_e):


       First, the user would create the file:  !!vvii ccoommbb..iinn
       Second, the user would direct _r_._c_o_m_b_i_n_e to take its input from the
        file:  << ccoommbb..iinn



       WINDOW
              WINDOW  raster_map  Gives  on-line  geographic  region  (window)
              information about the raster map layer specified.



       HISTORY
              Provides  a listing of all previously completed expressions used
              within the current _r_._c_o_m_b_i_n_e session, and the numbers associated
              with the execution of these commands.



       HELP
              HELP  command  An  on-line  help facility for _r_._c_o_m_b_i_n_e commands
              only. Type in the name of the _r_._c_o_m_b_i_n_e command for  which  help
              is needed, to see the entry for that command.



       ERASE  Will cause the color graphics monitor to clear.


NNOOTTEESS
       In  all of the above examples, only a single line of input was provided
       to _r_._c_o_m_b_i_n_e.  However,  since  _r_._c_o_m_b_i_n_e  conveniently  ignores  extra
       spaces  and tabs, it is possible to type input to _r_._c_o_m_b_i_n_e in the man-
       ner outlined below. Users may find this to  more  clearly  exhibit  the
       relationships  involved  and  parentheses  needed. This can be typed as
       shown below either directly at the _r_._c_o_m_b_i_n_e  command  line,  or  redi-
       rected into _r_._c_o_m_b_i_n_e from an already existing file.


       example:
       (NAME good.place
              (AND
                       (OR
                               (GROUP 1 2 5 (geology))
                               (GROUP 1-5 (elevation.255))
                       )
                       (NOT
                               (GROUP 1-4 (landuse))
                       )
             )
       )

       Such  involved  input  to _r_._c_o_m_b_i_n_e might conveniently be typed into an
       input file, and then input to  _r_._c_o_m_b_i_n_e  using  the  UNIX  redirection
       mechanism <<.

SSEEEE AALLSSOO
       _r_._i_n_f_e_r

       _r_._m_a_p_c_a_l_c

       _r_._w_e_i_g_h_t

AAUUTTHHOORRSS
       L. Van Warren, Michael Shapiro, James Westervelt,

       U.S. Army Construction Engineering Research Laboratory

       _L_a_s_t _c_h_a_n_g_e_d_: _$_D_a_t_e_: _2_0_0_2_/_0_1_/_2_5 _0_5_:_4_5_:_3_4 _$



GRASS 5.0                                                         r.combine(1)
