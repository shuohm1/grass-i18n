r.compress(1)                 Grass User's Manual                r.compress(1)



NNAAMMEE
       rr..ccoommpprreessss  - Compresses and decompresses raster files.
       _(_G_R_A_S_S _R_a_s_t_e_r _P_r_o_g_r_a_m_)

SSYYNNOOPPSSIISS
       rr..ccoommpprreessss
       rr..ccoommpprreessss hheellpp
       rr..ccoommpprreessss [--qquu] mmaapp==_n_a_m_e[,_n_a_m_e,...]

DDEESSCCRRIIPPTTIIOONN
       The  GRASS  program  _r_._c_o_m_p_r_e_s_s  can be used to compress and decompress
       raster map layers.


       During compression, this program reformats raster files  using  a  run-
       length-encoding  (RLE) algorithm.  Raster map layers which contain very
       little information (such as boundary, geology, soils and land use maps)
       can  be  greatly  reduced in size. Some raster map layers are shrunk to
       roughly 1% of their original sizes.  Raster map layers containing  com-
       plex  images  such  as  elevation  and  photo  or  satellite images may
       increase slightly in size. GRASS uses a new compressed format, and  all
       new  raster  files are now automatically stored in compressed form (see
       FORMATS below).  GRASS programs can read both  compressed  and  regular
       (uncompressed)  file  formats.  This allows the use of whichever raster
       data format consumes less space.


       As an example, the Spearfish data base raster map layer _o_w_n_e_r was orig-
       inally a size of 26600 bytes.  After it was compressed, the raster file
       became only 1249 bytes (25351 bytes smaller).


       Raster files may be decompressed to return them to their original  for-
       mat,  using the --uu option of _r_._c_o_m_p_r_e_s_s. If _r_._c_o_m_p_r_e_s_s is asked to com-
       press a raster file which is already compressed (or  to  decompress  an
       already decompressed file), it simply informs the user of this and asks
       the user if he wishes to perform the reverse operation.

PPRROOGGRRAAMM OOPPTTIIOONNSS
       _r_._c_o_m_p_r_e_s_s can be run either non-interactively  or  interactively.   In
       non-interactive  use,  the  user must specify the name(s) of the raster
       map layer(s) to be compressed (or decompressed) on  the  command  line,
       using  the  form  mmaapp==_n_a_m_e[,_n_a_m_e,...] (where each _n_a_m_e is the name of a
       raster map layer to be compressed or  decompressed).  To  decompress  a
       map, the user must include the --uu option on the command line. If the --uu
       option is not included on the command line, _r_._c_o_m_p_r_e_s_s will attempt  to
       compress the named map layer(s).


       If  the  user  simply types rr..ccoommpprreessss without specifying any map layer
       name(s) on the command line, _r_._c_o_m_p_r_e_s_s will prompt the  user  for  the
       names  of the map layers to be compressed/decompressed, and ask whether
       these maps are to be compressed or decompressed. This program interface
       is the standard GRASS parser interface.

   FFllaaggss::
       --uu     If set, _r_._c_o_m_p_r_e_s_s converts a compressed map to its _u_n_c_o_m_p_r_e_s_s_e_d
              format.  If not set, _r_._c_o_m_p_r_e_s_s will  attempt  to  compress  the
              named map layer(s).

       --qq     Run  quietly.  Suppress printing of percent complete messages to
              standard output.




   PPaarraammeetteerrss::
       mmaapp==_n_a_m_e[_n_a_m_e,....]
              The name(s) of raster map layer(s) to be  compressed  or  decom-
              pressed.


FFOORRMMAATTSS
       Conceptually,  a  raster data file consists of rows of cells, with each
       row containing the same number of cells.  A cell  consists  of  one  or
       more  bytes.  The number of bytes per cell depends on the category val-
       ues stored in the cell.  Category values in the range 0-255  require  1
       byte  per  cell, while category values in the range 256-65535 require 2
       bytes, and category values in the range above 65535 require 3 (or more)
       bytes per cell.


       The ddeeccoommpprreesssseedd raster file format matches the conceptual format.  For
       example, a raster file with 1 byte cells that  is  100  rows  with  200
       cells  per  row, consists of 20,000 bytes.  Running the UNIX command _l_s
       _-_l on this file will show a size of 20,000.  If the cells were  2  byte
       cells,  the  file  would  require 40,000 bytes.  The map layer category
       values start with the upper left corner  cell  followed  by  the  other
       cells along the northern boundary.  The byte following the last byte of
       that first row is the first cell of the second row of  category  values
       (moving  from left to right).  There are no end-of-row markers or other
       syncing codes in the raster file.  A cell header file (_c_e_l_l_h_d) is  used
       to  define  how this string of bytes is broken up into rows of category
       values.


       The ccoommpprreesssseedd format is not so simple, but is  quite  elegant  in  its
       design.  It not only requires less disk space to store the raster data,
       but often can result in faster execution of graphic and  analysis  pro-
       grams  since  there is less disk I/O. There are two compressed formats:
       the pre-version 3.0 format (which GRASS programs can read but no longer
       produce),  and the version 3.0 format (which is automatically used when
       new raster map layers are created).

   PPRREE--33..00 FFOORRMMAATT::
       First 3 bytes (chars) - These are a special code  that  identifies  the
       raster data as compressed.


       Address  array  (long)  -  array  (size  of  the number of rows + 1) of
       addresses pointing to the internal start of each row.  Because each row
       may  be  a different size, this array is necessary to provide a mapping
       of the data.


       Row by row, beginning at the northern edge of the  data,  a  series  of
       byte  groups  describes the data.  The number of bytes in each group is
       the number of bytes per cell plus one.  The first byte  of  each  group
       gives a count (up to 255) of the number of cells that contain the cate-
       gory values given by the remaining bytes of the group.

   PPOOSSTT--33..00 FFOORRMMAATT::
       The 3 byte code is not used.  Instead, a field in the  cell  header  is
       used to indicate compressed format.


       The address array is the same.


       The  RLE format is the same as the pre-3.0 RLE, except that each row of
       data is preceded by a single byte containing the number  of  bytes  per
       cell  for the row, and if run-length-encoding the row would not require
       less space than non-run-length-encoding, then the row is not encoded.


       These improvements give better compression than the pre-3.0  format  in
       99%  of  the raster data layers.  The kinds of raster data layers which
       get bigger are those in which each row would be  larger  if  compressed
       (e.g.,  imagery  band  files).   But  even in this case the raster data
       layer would only be larger by the size of the  address  array  and  the
       single byte preceding each row.

SSEEEE AALLSSOO
       _r_._s_u_p_p_o_r_t
       _p_a_r_s_e_r

AAUUTTHHOORRSS
       James Westervelt,

       Michael Shapiro,

       U.S. Army Construction Engineering Research Laboratory

       _L_a_s_t _c_h_a_n_g_e_d_: _$_D_a_t_e_: _2_0_0_2_/_0_1_/_2_5 _0_5_:_4_5_:_3_4 _$



GRASS 5.0                                                        r.compress(1)
