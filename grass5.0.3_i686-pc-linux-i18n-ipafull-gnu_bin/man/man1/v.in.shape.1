v.in.shape(1)                 Grass User's Manual                v.in.shape(1)



NNAAMMEE
       vv..iinn..sshhaappee - Read an ArcView Shapefile
       _(_G_R_A_S_S _V_e_c_t_o_r _P_r_o_g_r_a_m_)

SSYYNNOOPPSSIISS
       vv..iinn..sshhaappee


       vv..iinn..sshhaappee[[--lloouudd]]  iinnppuutt==_n_a_m_e [oouuttppuutt==_n_a_m_e] [vveerrbboossee==_d_e_b_u_g _l_e_v_e_l] [lloogg--
       ffiillee==_n_a_m_e] [ssnnaappddiisstt==_s_n_a_p _d_i_s_t_a_n_c_e] [ssccaallee==_o_r_i_g_. _s_c_a_l_e] [aattttrriibbuuttee==_c_a_t_-
       _e_g_o_r_y _n_u_m_b_e_r] [llaabbeell==_c_a_t_e_g_o_r_y _l_a_b_e_l]

DDEESSCCRRIIPPTTIIOONN
       The  _v_._i_n_._s_h_a_p_e  program  is  designed  to  import  ArcView Shapefiles.
       _v_._i_n_._s_h_a_p_e will be run non-interactively if the user specifies  program
       arguments on the command line. Alternately, the user can simply type:


       vv..iinn..sshhaappee

       on  the  command line without program arguments. In this case, the user
       will be prompted for parameter values using  the  standard  GRASS  user
       interface described in the manual entry for _p_a_r_s_e_r.

FFEEAATTUURREESS
       By  default  Grass files created have the name extracted from the base-
       name of the shapefile. This can be over-ridden by supplying a value  to
       the _o_u_t_p_u_t option, which must be a legal name.


       The  current  version  is  more  robust than the module available up to
       Spring 2002.  The emphasis is now  to  concentrate  on  maintaining  an
       effective  shape file import filter.  To assist this, features that are
       really extensions of the basic aim have  been  removed.   Selection  of
       features  with  particular  attributes  can still be extracted to a new
       file with _v_._e_x_t_r_a_c_t. There is also less need for posterior  error  cor-
       rection  now,  as the current module filters out some potentially prob-
       lematic shapes at the point of  import,  and  so,  will  always  insert
       incoming  data  into  the final map. If a map fails to build because of
       topological errors, the problem can be tracked down using  _v_._d_i_g_i_t  and
       fixed.  Formerly,  the  module  attempted  many kinds of fixes, however
       there were many complaints about imported maps being modified  or  cor-
       rupted by the process, so we now leave the fixing of such errors to the
       user.
       The snap distance, which always has a small default value if  not  sup-
       plied,  creates a microgrid of cells in the import map region. Only one
       vertex is ever assigned to a particular cell.  If  a  later  vertex  is
       added  that  is in the same cell, it is considered co-incident with the
       first. When a link is added between two vertices, it  is  recorded  and
       the  same  link  is  not added twice. The snap distance is also used to
       define the co-incidence of other spatial entities, for example edges of
       bounding boxes. This snap distance has no relation to the snap distance
       defined for the dig_plus map. (This still needs some improvement).

OOPPTTIIOONNSS
   FFllaaggss::
       --ll     Force an area (polygon theme) import to be imported as lines  aass
              iiss. This option can be used to create an outline of the original
              boundaries even if the map is bad. This option  is  ignored  for
              other types of import.

       --oo     Allow over-write of existing vector map.

       --uu     If  the  record number is used as the attribute, several 'parts'
              of the same does not currently support  compound  objects.  This
              may  be  what you want, but it might not. To assign a unique and
              sequential record number, as attribute, to each area choose this
              option. So, this option is ignored if the _a_t_t_r_i_b_u_t_e is set.

              NNoottee:: This can cause a subtle difference even if applied to cov-
              erages without compound objects, as it always applies a  sequen-
              tial  ID value to each successively imported object. Without the
              option,  it is the record number in the original that  is  used,
              which  can  skip  values if there are NNUULLLL shapes, because GRASS
              ignores the latter.  This may be important if you  plan  to  use
              the attribute as a row ID in an external database or _d_b_m_i.

       --dd     List fields in DBF file


   PPaarraammeetteerrss::
       iinnppuutt=_f_i_l_e_n_a_m_e
              Name  of  input shape file. Provide a full path name or the name
              of a file in the current directory. Any of  the  full  pathname,
              basename, or prefix only will suffice.

       oouuttppuutt=_f_i_l_e_n_a_m_e
              Name  of  vector  map  to  be  created (default: prefix of shape
              file). By default prefix of shape file name is used.

       vveerrbboossee=_i_n_t_e_g_e_r
              Number between 0 (minimal report of fatal errors  and  essential
              warnings)  and  3 (very verbose log - reports most data transfer
              operations and some intermediate steps).  The default is 11.

       llooggffiillee=_f_i_l_e_n_a_m_e
              Name of file[path] where log info will be written.  By  default,
              log info is directed to _s_t_d_e_r_r, which is also used (with a warn-
              ing) if the log filepath is invalid or not writable.

       ssnnaappddiisstt=_f_p_-_n_u_m_b_e_r
              A grid resolution can be defined within which adjacent  vertices
              will snap.

              NNoottee::The  vertices  do  not  snap  to the grid. All the vertices
              inside a grid cell snap to one  of  their  number  (usually  the
              first).   This  value defaults to 1.0e-10 ground units. In fact,
              it will never allow a value that is  less.  This  is  still  not
              quite   right,  but  errors  caused  by  it  are  astronomically
              unlikely, and are easily fixed manually, which must be  set  off
              against the import process increasing in duration by a factor of
              several if the snapping procedure was perfectly correct.  Really
              effective  snapping  must await the development of spatial query
              functions.  Therefore it will not be changed at this stage.

       ssccaallee=_i_n_t_e_g_e_r
              This sets an original scale that will be specified in the header
              of  the  vector  map file produced.  It can be edited later with
              vv..ddiiggiitt.  The value defaults to 1:2400. The value  affects  some
              behaviour  of  _v_._d_i_g_i_t including proper building, so may have to
              be played with.  Of course it can be reset by _v_._d_i_g_i_t  following
              import.

       aattttrriibbuuttee=_n_a_m_e
              Name  of  the  input  field  to  use  as  the category number in
              dig_att.  Defaults to using the record ID number as  a  category
              value  if  no value is assigned or a non-numeric field is given.
              If the field is floating-point the value is rounded to the near-
              est integer.

       llaabbeell==_n_a_m_e
              Name  of  the  input  field  to  use  as  the  category label in
              dig_cats. Only writes out results if a meaningful category field
              is given, otherwise no action is taken. If the same attribute is
              re-assigned a new category, the value is over-written.

BBUUGGSS AANNDD CCAAVVEEAATT
       There is no support for projection since the projection information  is
       not stored in SHAPE files.


       Multipatch  data  is not yet supported. Point data is now imported, but
       in the GRASS 5.0.x vector model, these  vector  'points'  have  limited
       utility.The  module  _s_._i_n_._s_h_a_p_e imports site data in a form that may be
       found more useful.


       The filtration process creates a large temp file to store the  imported
       data  and  a  significant amount of metadata about the imported points.
       This can be large in large files. It is deleted if the import  proceeds
       in  a  normal fashion, but will be left 'dangling' on abnormal termina-
       tion. This however is a quite general  problem  in  the  current  GRASS
       environment  model.  If  disk  space is available, this module will now
       import an unlimited size of map, though it is currently slow  on  large
       maps,  as there are many disk read/write operations. This is compounded
       by the lengthy build process, which  however  affects  all  vector  map
       builds.


       Area  and perimeter fields in input data may no longer be quite correct
       if the lines have been adjusted to correct topology problems.   But  if
       the user has not modified the file, the values should be correct. If in
       doubt, GRASS's own modules may be used to  generate  dimensional  data,
       for example _v_._r_e_p_o_r_t

EEXXAAMMPPLLEE
       Example:

       v.in.shape   in=map.shp   out=map   attribute=OBJART   label=ALIASFOLIE
       scale=25000
       This command imports the shape  file  "map"  into  GRASS  at  scale  of
       1:25000  (since the scale is not stored in the shape file). "attribute"
       is the field name containing the record ID (if not set,  internal  num-
       bering  will  be done).  "label" is the field containing the associated
       text labels. Use the "-d" flag to get  the  list  of  fields  from  the
       "map.dbf" file.

SSEEEE AALLSSOO
       _m_._i_n_._e_0_0_,  _g_._m_a_p_s_e_t_s_, _g_._r_e_g_i_o_n_, _v_._d_i_g_i_t_, _v_._p_r_o_j_, _s_._i_n_._s_h_a_p_e_, _v_._s_u_p_p_o_r_t_,
       _v_._t_o_._r_a_s_t_, _v_._o_u_t_._s_h_a_p_e _v_._e_x_t_r_a_c_t _v_._r_e_p_o_r_t

AAUUTTHHOORRSS
       Frank Warmerdam (warmerda@home.com)
       Based on Shapelib (http://gdal.velocet.ca/projects/shapelib/).


       Markus Neteler

       added category support


       David Gray

       preprocessing to provide correct handling of polygon edges, labels  and
       correction of some topological errors. Also some new options q.v.
       Spring 2002: Rewrite of most of the code.

       _L_a_s_t _c_h_a_n_g_e_d_: _$_D_a_t_e_: _2_0_0_2_/_0_6_/_1_7 _1_7_:_2_2_:_4_6 _$



GRASS 5.0                                                        v.in.shape(1)
