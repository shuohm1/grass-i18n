m.eigensystem(1)              Grass User's Manual             m.eigensystem(1)



NNAAMMEE
       mm..eeiiggeennssyysstteemm   -  Computes  eigen  values and eigen vectors for square
       matricies.
       _(_G_R_A_S_S _D_a_t_a _I_m_p_o_r_t_/_P_r_o_c_e_s_s_i_n_g _P_r_o_g_r_a_m_)

SSYYNNOOPPSSIISS
       mm..eeiiggeennssyysstteemm << _i_n_p_u_t_f_i_l_e

DDEESSCCRRIIPPTTIIOONN
       _m_._e_i_g_e_n_s_y_s_t_e_m determines the eigen values and eigen vectors for  square
       matricies.   The  _i_n_p_u_t_f_i_l_e  must  have the following format: the first
       line contains an integer K which is the number of rows and  columns  in
       the  matrix;  the  remainder  of the file is the matrix, i.e., K lines,
       each containing K real numbers.  For example:



                 3
                 462.876649   480.411218   281.758307
                 480.411218   513.015646   278.914813
                 281.758307   278.914813   336.326645




       The output will be K groups of lines;  each group will have the format:
                 E   real part imaginary part   relative importance
                 V   real part imaginary part
                          ... K lines ...
                 N   real part imaginary part
                          ... K lines ...
                 W   real part imaginary part
                          ... K lines ...


       The  _E line is the eigen value.  The _V lines are the eigen vector asso-
       ciated with E.  The _N lines are the V vector normalized to have a  mag-
       nitude  of  1.   The  _W lines are the N vector multiplied by the square
       root of the magnitude of the eigen value (E).


       For the example input matrix, the output would be:
                 E  1159.7452017844    0.0000000000   88.38
                 V     0.6910021591    0.0000000000
                 V     0.7205280412    0.0000000000
                 V     0.4805108400    0.0000000000
                 N     0.6236808478    0.0000000000
                 N     0.6503301526    0.0000000000
                 N     0.4336967751    0.0000000000
                 W    21.2394712045    0.0000000000
                 W    22.1470141296    0.0000000000
                 W    14.7695575384    0.0000000000

                 E     5.9705414972    0.0000000000    0.45
                 V     0.7119385973    0.0000000000
                 V    -0.6358200627    0.0000000000
                 V    -0.0703936743    0.0000000000
                 N     0.7438340890    0.0000000000
                 N    -0.6643053754    0.0000000000
                 N    -0.0735473745    0.0000000000
                 W     1.8175356507    0.0000000000
                 W    -1.6232096923    0.0000000000
                 W    -0.1797107407    0.0000000000

                 E   146.5031967184    0.0000000000   11.16
                 V     0.2265837636    0.0000000000
                 V     0.3474697082    0.0000000000
                 V    -0.8468727535    0.0000000000
                 N     0.2402770238    0.0000000000
                 N     0.3684685345    0.0000000000
                 N    -0.8980522763    0.0000000000
                 W     2.9082771721    0.0000000000
                 W     4.4598880523    0.0000000000
                 W   -10.8698904856    0.0000000000



PPRROOGGRRAAMM NNOOTTEESS
       The relative importance of the eigen value (E) is the  ratio  (percent-
       age)  of the eigen value to the sum of the eigen values.  Note that the
       output is not sorted by relative importance.


       In general, the solution to the eigen system results in complex numbers
       (with  both  real and imaginary parts).  However, in the example above,
       since the input matrix is  symmetric  (i.e.,  inverting  the  rows  and
       columns  gives  the  same matrix) the eigen system has only real values
       (i.e., the imaginary part is zero).  This fact makes it possible to use
       eigen  vectors  to  perform  principle component transformation of data
       sets.  The covariance or correlation matrix of any data set is  symmet-
       ric and thus has only real eigen values and vectors.

PPRRIINNCCIIPPLLEE CCOOMMPPOONNEENNTTSS
       To perform principle component transformation on GRASS data layers, one
       would use _r_._c_o_v_a_r to get the covariance (or correlation) matrix  for  a
       set of data layers, _m_._e_i_g_e_n_s_y_s_t_e_m to extract the related eigen vectors,
       and _r_._m_a_p_c_a_l_c to form the desired components.  For example, to get  the
       eigen vectors for 3 layers:
       ((eecchhoo 33;; rr..ccoovvaarr mmaapp..11,,mmaapp..22,,mmaapp..33)) || mm..eeiiggeennssyysstteemm

       Note  that  since  m.covar  only  outputs  the matrix, we must manually
       prepend the matrix size (3) using the echo command.


       Then, using the W vector, new maps are created:
       rr..mmaappccaallcc 'pc.1 = 21.2395*map.1 + 22.1470*map.2 + 14.7696*map.3'
       rr..mmaappccaallcc 'pc.2 =  2.9083*map.1 +  4.4599*map.2  - 10.8699*map.3'
       rr..mmaappccaallcc 'pc.3 =  1.8175*map.1  -  1.6232*map.2 -  0.1797*map.3'


NNOOTTEESS
       The   source   code   for   this   program   lives   under    /src.con-
       trib/CERL/misc/m.eigensystem and requires a Fortran compiler.

SSEEEE AALLSSOO
       _r_._c_o_v_a_r

       _r_._m_a_p_c_a_l_c

       _r_._r_e_s_c_a_l_e

AAUUTTHHOORR
       This  code  uses  routines  from the EISPACK system.  The interface was
       coded by Michael Shapiro, U.S.Army  Construction  Engineering  Research
       Laboratory

       _L_a_s_t _c_h_a_n_g_e_d_: _$_D_a_t_e_: _2_0_0_2_/_0_1_/_2_5 _0_5_:_4_5_:_3_3 _$



GRASS 5.0                                                     m.eigensystem(1)
