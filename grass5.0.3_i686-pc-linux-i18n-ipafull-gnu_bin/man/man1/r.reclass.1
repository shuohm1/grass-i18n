r.reclass(1)                  Grass User's Manual                 r.reclass(1)



NNAAMMEE
       rr..rreeccllaassss   -  Creates  a new map layer whose category values are based
       upon the user's reclassification of categories in  an  existing  raster
       map layer.
       _(_G_R_A_S_S _R_a_s_t_e_r _P_r_o_g_r_a_m_)

SSYYNNOOPPSSIISS
       rr..rreeccllaassss
       rr..rreeccllaassss hheellpp
       rr..rreeccllaassss iinnppuutt==_n_a_m_e oouuttppuutt==_n_a_m_e [TTIITTLLEE==_n_a_m_e]

DDEESSCCRRIIPPTTIIOONN
       _r_._r_e_c_l_a_s_s  creates  an  _o_u_t_p_u_t  map  layer based on an _i_n_p_u_t raster map
       layer.  The output map layer will be a reclassification  of  the  input
       map layer based on reclass rules input to _r_._r_e_c_l_a_s_s, and can be treated
       in much the same way that raster files are treated.  A  _T_I_T_L_E  for  the
       output map layer may be (optionally) specified by the user.


       The  reclass  rules  are  read from standard input (i.e., from the key-
       board, redirected from a file, or piped through another program).


       The program will be run non-interactively if  the  user  specifies  the
       _n_a_m_e  of the raster map layer to be reclassified, the _n_a_m_e of an output
       layer to hold reclass rules, and (optionally) the _n_a_m_e of a  TITLE  for
       the output map:


       rr..rreeccllaassss iinnppuutt==_n_a_m_e oouuttppuutt==_n_a_m_e [TTIITTLLEE==_n_a_m_e]



       After  the user types in the above information on the command line, the
       program will (silently) prompt the user for reclass rules to be applied
       to  the  input  map  layer  categories.   The  form  of  these rules is
       described in further detail in the sections on non-interactive  program
       use reclass rules and examples, below.


       Alternately,  the  user  can simply type rr..rreeccllaassss on the command line,
       without program arguments.  In this case, the user will be prompted for
       all needed inputs.


       Before using _r_._r_e_c_l_a_s_s one must know the following:

              The  new categories desired;  and, which old categories fit into
              which new categories.

              The names of the new categories.


IINNTTEERRAACCTTIIVVEE PPRROOGGRRAAMM UUSSEE:: EEXXAAMMPPLLEE
       Suppose we want to reclassify the raster map layer _r_o_a_d_s, consisting of
       five  categories,  into the three new categories:  paved roads, unpaved
       roads, and railroad tracks.  The user is asked whether the reclass  ta-
       ble  is  to be established with each category value initially set to 0,
       or with each category value initially set to its own value.   A  screen
       like that shown below then appears, listing the categories of the _r_o_a_d_s
       raster map layer to be reclassified and prompting the user for the  new
       category values to be assigned them.



            ENTER NEW CATEGORY NUMBERS FOR THESE CATEGORIES

            OLD CATEGORY NAME       OLD     NEW
                                    NUM     NUM
            no data                 0      0___
            Hard Surface, 2 lanes    1      0___
            Loose Surface, 1 lane    2      0___
            Improved Dirt            3      0___
            Unimproved Dirt Trail    4      0___
            Railroad, single track   5      0___

            AFTER COMPLETING ALL ANSWERS, HIT <ESC> TO CONTINUE
                         (OR <Ctrl-C> TO CANCEL)

       In  the  following  screen  the  new  category values have been entered
       beside the appropriate old category  names.   Cells  assigned  category
       values 2, 3, and 4 in the old raster map layer are now assigned the new
       category value 2 in the reclassed map; cell data formerly  assigned  to
       category  value  5  in  the old raster map map are now assigned the new
       category value 3 in the reclassed map.
            ENTER NEW CATEGORY NUMBERS FOR THESE CATEGORIES


            OLD CATEGORY NAME         OLD     NEW
                                     NUM     NUM
            no data                   0      0___
            Hard Surface, 2 lanes     1      1___
            Loose Surface, 1 lane     2      2___
            Improved Dirt         3      2___
            Unimproved Dirt Trail     4      2___
            Railroad, single track    5      3___

            AFTER COMPLETING ALL ANSWERS, HIT <ESC> TO CONTINUE
                         (OR <Ctrl-C> TO CANCEL)

       Hitting the escape key  will  bring  up  the  following  screen,  which
       prompts  the user to enter a new TITLE and category label for the newly
       rreeccllaasssseedd categories.
            ENTER NEW CATEGORY NAMES FOR THESE CATEGORIES

            TITLE:  Roads Reclassified
                   CAT         NEW CATEGORY NAME
                   NUM
                    0          no data
                    1          Paved Roads
                    2          Unpaved Roads
                    3          Railroad, single track

              AFTER COMPLETING ALL ANSWERS, HIT <ESC> TO CONTINUE
                            (OR <Ctrl-C> TO CANCEL)

       Based upon the information supplied by the user  in  the  above  sample
       screens,  the  new output map, supporting category, color, history, and
       header files are created.

NNOONN--IINNTTEERRAACCTTIIVVEE PPRROOGGRRAAMM UUSSEE:: RREECCLLAASSSS RRUULLEESS
       In non-interactive program use, the names of an input map, output  map,
       and  output  map  TITLE  are  given  on the command line.  However, the
       reclass rules are still read from standard input (i.e., from  the  key-
       board, redirected from a file, or piped through another program).


       Once the user has specified an input raster map layer, output map layer
       name, and (optionally) output  map  layer  TITLE  by  typing  rr..rreeccllaassss
       iinnppuutt==_n_a_m_e oouuttppuutt==_n_a_m_e [TTIITTLLEE==_n_a_m_e]

       Each  line  of  input  must  have  the  following  format:  iinnppuutt__ccaattee--
       ggoorriieess==_o_u_t_p_u_t___c_a_t_e_g_o_r_y  [_l_a_b_e_l]



       where the input lines specify the category values in the  input  raster
       map layer to be reclassified to the new _o_u_t_p_u_t___c_a_t_e_g_o_r_y category value.
       Specification of a _l_a_b_e_l to be associated with the new output map layer
       category  is  optional.   If  specified, it is recorded as the category
       label for the new category value.  The equal sign = is  required.   The
       _i_n_p_u_t___c_a_t_e_g_o_r_y_(_i_e_s_) may consist of single category values or a range of
       such values in the format "_l_o_w thru _h_i_g_h."  The  word  "thru"  must  be
       present.


       To  include  all  (remaining)  values the asterix "*" can be used. This
       rule has to be set as last rule. No further rules  are  accepted  after
       setting this rule.


       No data have to be spcified with NULL.


       A line containing only the word eenndd terminates the input.

NNOONN--IINNTTEERRAACCTTIIVVEE PPRROOGGRRAAMM UUSSEE:: EEXXAAMMPPLLEESS
       The following examples may help clarify the reclass rules.



        1. This example reclassifies categories 1, 2 and 3 in the input raster
              map  layer "roads" to category 1 with category label "good qual-
              ity" in the output map layer, and reclassifies input raster  map
              layer  categories  4  and  5  to category 2 with the label "poor
              quality" in the output map layer.
                  1 2 3   = 1    good quality
                  4 5     = 2    poor quality



       2. This example reclassifies input raster map layer categories  1  thru
       10  to  output map layer category 1, input map layer categories 11 thru
       20 to output map layer category 2, and input map  layer  categories  21
       thru  30  to output map layer category 3, all without labels. The range
       from 30 to 40 is reclassified as NULL.
            1 thru 10 = 1
           11 thru 20 = 2
           21 thru 30 = 3
           30 thru 40  = NULL

       3. Subsequent rules override  previous  rules.   Therefore,  the  below
       example reclassifies input raster map layer categories 1 thru 19 and 51
       thru 100 to category 1 in the output map layer, input raster map  layer
       categories  20  thru 24 and 26 thru 50 to the output map layer category
       2, and input raster map layer category 25 to the output category 3.
            1 thru 100     = 1    poor quality
           20 thru 50 = 2    medium quality
           25            = 3    good quality

       4. This example reclassifies categories 1, 3 and 5 in the input  raster
       map  layer to category 1 with category label "poor quality" in the out-
       put map layer, and reclassifies input raster map layer categories 2, 4,
       and  6  to  category  2 with the label "good quality" in the output map
       layer.  All other values are reclassified to NULL.
           1 3 5   = 1    poor quality
           2 4 6   = 2    good quality
           *       = NULL



       5. The previous example could also have been entered as:
            1 thru 19  51 thru 100   = 1    poor quality
           20 thru 24  26 thru 50    = 2    medium quality
           25                   = 3    good quality

       or as:
            1 thru 19  = 1    poor quality
           51 thru 100      = 1
           20 thru 24  = 2
           26 thru 50  = 2    medium quality
           25          = 3    good quality



       The final example was given to show how the labels are handled.   If  a
       new  category  value appears in more than one rule (as is the case with
       new category values 1 and  2),  the  last  label  which  was  specified
       becomes  the  label  for  that  category.   In this case the labels are
       assigned exactly as in the two previous examples.

NNOOTTEESS
       In fact, the _r_._r_e_c_l_a_s_s program does _n_o_t generate  any  new  raster  map
       layers  (in  the  interests  of  disk  space conservation).  Instead, a
       rreeccllaassss ttaabbllee is stored which will be used to reclassify  the  original
       raster  map  layer each time the new (reclassed) map name is requested.
       As far as the user (and programmer) is concerned, that raster  map  has
       been  created.   Also  note  that  although  the  user  can  generate a
       _r_._r_e_c_l_a_s_s map  which  is  based  on  another  _r_._r_e_c_l_a_s_s  map,  the  new
       _r_._r_e_c_l_a_s_s  map map will be stored in GRASS as a reclass of the _o_r_i_g_i_n_a_l
       raster map on which the first  reclassed  map  was  based.   Therefore,
       while  GRASS allows the user to provide _r_._r_e_c_l_a_s_s map layer information
       which is based on an already reclassified map (for  the  user's  conve-
       nience),  no  _r_._r_e_c_l_a_s_s  map  layer  (i.e., _r_e_c_l_a_s_s _t_a_b_l_e) will ever be
       _s_t_o_r_e_d as a _r_._r_e_c_l_a_s_s of a _r_._r_e_c_l_a_s_s.


       To convert a reclass map to a regular raster map layer, set  your  geo-
       graphic  region  settings  to  match the settings in the header for the
       reclass map (an ASCII file found under the _c_e_l_l_h_d directory,  or  view-
       able by running _r_._r_e_s_a_m_p_l_e.


       _r_._m_a_p_c_a_l_c can also be used to convert a reclass map to a regular raster
       map layer:


       rr..mmaappccaallcc rraasstteerr__mmaapp==reclass_map



       where _r_a_s_t_e_r___m_a_p is the name to be given to the  new  raster  map,  and
       _r_e_c_l_a_s_s___m_a_p is an existing reclass map.

BBEEWWAARREE
       Because  _r_._r_e_c_l_a_s_s  generates  a table referencing some original raster
       map layer  rather  than  creating  a  reclassed  raster  map  layer,  a
       _r_._r_e_c_l_a_s_s map layer will no longer be accessible if the original raster
       map layer upon which it was based is later removed.


       A _r_._r_e_c_l_a_s_s map is not a true raster map layer.  Rather, it is a  table
       of  reclassification values which reference the input raster map layer.
       Therefore, users who wish to retain reclassified map layers  must  also
       save  the  original input raster map layers from which they were gener-
       ated. Alternatively r.recode can be used.


       Category values which are not explicitly reclassified to a new value by
       the user will be reclassified to NULL.

SSEEEE AALLSSOO
       _r_._r_e_s_a_m_p_l_e

       _r_._r_e_s_c_a_l_e, _r_._r_e_c_o_d_e

AAUUTTHHOORRSS
       James Westervelt,
       Michael Shapiro,
       U.S.Army Construction Engineering Research Laboratory

       _L_a_s_t _c_h_a_n_g_e_d_: _$_D_a_t_e_: _2_0_0_2_/_0_1_/_2_5 _0_5_:_4_5_:_3_4 _$



GRASS 5.0                                                         r.reclass(1)
